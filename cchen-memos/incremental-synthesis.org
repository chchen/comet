* Incremental Synthesis

11 December 2019

We would like to ensure that our synthesis is both correct and quick
by breaking the synthesis task into three parts:

1. Variable declaration
2. Assignment of initial state
3. Regular assignment

** Current State

Right now, I'm doing synthesis of these three parts separately, and
adding them to a template at the end. However, the whole program isn't
verified against the UNITY spec. We can add a post-facto verification
step, but there may be a more elegant way to structure the synthesis
task incrementally, as described below.

** Incremental Synthesis Steps

1. Synthesize a set of declaration statements that creates an
   equivalent variable context.
2. Including the synthesized declaration statements, create a template
   with a hole for statements for establishing an initial variable
   state that is equivalent in interpretation to the UNITY
   specification's initial section.
3. Including the declaration statements and the synthesized initial
   assignment, create a template with a hole for statements that when
   interpreted, is equivalent to the UNITY specification's assign
   section.
